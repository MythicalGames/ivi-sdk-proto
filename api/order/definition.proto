syntax = "proto3";

option java_multiple_files = true;
option java_package = "games.mythical.ivi.sdk.proto.api.order";

package api.order;

import "google/protobuf/struct.proto";
import "common/order/definition.proto";
import "common/common.proto";
import "google/protobuf/timestamp.proto";

// Order definitions
message IssuedItems {
  repeated IssuedItem purchased_items = 1;
}

message Order {
  string order_id = 1;
  string buyer_player_id = 2;
  string tax = 3;
  string total = 4;
  common.order.OrderState order_status = 5;
  Address address = 6;
  string metadata = 7;
  string created_by = 8;
  // TODO: provide if needed, currently is butchered in orderClient
  // google.protobuf.Timestamp created_timestamp = 9;
  string request_ip = 10;
  string environment_id = 11;
  PaymentProviderId payment_provider_id = 12;
  oneof line_items {
    IssuedItems purchased_items = 13;
    string listing_id = 15;
  }
  PaymentProviderOrderProto payment_provider_data = 14;
  string store_id = 16;
}

// Create order call
message Address {
  string first_name = 1;
  string last_name = 2;
  string address_line_1 = 3;
  string address_line_2 = 4;
  string city = 5;
  string state = 6;
  string postal_code = 7;
  string country_name = 8;
  string country_iso_alpha_2 = 9;
}

message IssuedItem {
  string game_inventory_id = 1;
  string item_name = 2;
  string game_item_type_id = 3;
  string amount_paid = 4;
  string currency = 5;
  common.Metadata metadata = 6;
}

message CreateOrderRequest {
  string buyer_player_id = 1;
  string sub_total = 2;
  Address address = 3;
  google.protobuf.Struct metadata = 4;
  string request_ip = 6;
  string environment_id = 7;
  PaymentProviderId payment_provider_id = 8;
  OrderRequestProviderProto payment_provider_data = 9;
  oneof line_items {
    IssuedItems purchased_items = 10;
    string listing_id = 11;
  }
  string store_id = 12;
}

// Get order call
message GetOrderRequest {
  string environment_id = 1;
  string order_id = 2;
}

// finalize order
message FinalizeOrderRequest {
  string environment_id = 1;
  string order_id = 2;
  PaymentRequestProto payment_request_data = 3;
  string fraud_session_id = 4;
}

message FinalizeOrderAsyncResponse {
  bool success = 1;
  common.order.OrderState order_status = 2;
  string payment_instrument_type = 3;
  string transaction_id = 4;
  IssuedItems pending_issued_items = 5;
  FraudResultProto fraud_score = 6;
  string processor_response = 7;
}

// Payment definitions
enum PaymentProviderId {
  BRAINTREE = 0;
  BITPAY = 1;
}

message OrderRequestProviderProto {
  oneof provider {
    BitPayOrderRequestProto bitpay = 1;
  }
}

message BitPayOrderRequestProto {
  string redirect_url = 1;
  string notification_url = 2;
}

message PaymentProviderOrderProto {
  oneof provider {
    BitPayProto bitpay = 1;
  }
}

message BitPayProto {
  google.protobuf.Struct invoice = 1;
}

message PaymentRequestProto {
  oneof provider {
    BraintreePaymentRequestProto braintree = 1;
    BitPayPaymentRequestProto bitpay = 2;
  }
}

message BraintreePaymentRequestProto {
  string braintree_client_token = 1;
  string braintree_payment_nonce = 2;
}

message BitPayPaymentRequestProto {
  string invoice_id = 1;
}

message FraudResultProto {
  int32 fraud_score = 1;
  string fraud_omniscore = 2;
}